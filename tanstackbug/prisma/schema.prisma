generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id            Int        @id @default(autoincrement())
  created_at    DateTime?  @db.Timestamp(6)
  name          String     @db.VarChar(50)
  updated_at    DateTime?  @db.Timestamp(6)
  value         Int?
  work_space_id Int?
  iconname      String?
  workspace     workspace? @relation(fields: [work_space_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task          task[]
}

model member {
  created_at    DateTime?    @db.Timestamp(6)
  id            Int          @id @default(autoincrement())
  updated_at    DateTime?    @db.Timestamp(6)
  work_space_id Int?
  user_qs_id    String?
  task_id       Int?
  task          task?        @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workspace     workspace?   @relation(fields: [work_space_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  taskhubuser   taskhubuser? @relation(fields: [user_qs_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "user_qs_id_fk")
}

model tag {
  id          Int          @id @default(autoincrement())
  name        String
  task_id     Int?
  created_by  String?
  created_at  DateTime?    @db.Timestamp(6)
  updated_at  DateTime?    @db.Date
  taskhubuser taskhubuser? @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  task        task?        @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model task {
  id                 Int          @id @default(autoincrement())
  category_id        Int?
  due_date           DateTime     @db.Date
  updated_at         DateTime?    @db.Timestamp(6)
  title              String       @db.VarChar(50)
  created_at         DateTime?    @db.Timestamp(6)
  created_by_qs_user String?
  workspace_id       Int?
  progress           Int?         @default(0)
  priority           Int?         @default(0)
  description        String
  action             action[]
  member             member[]
  message            message[]
  subtask            subtask[]
  tag                tag[]
  taskhubuser        taskhubuser? @relation(fields: [created_by_qs_user], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "created_by_qs_user_fk")
  category           category?    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workspace          workspace?   @relation(fields: [workspace_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model taskhubuser {
  id                                       Int         @id @default(autoincrement())
  user_id                                  String?     @unique(map: "uniq_user_id")
  organization_id                          String?
  created_at                               DateTime?   @db.Date
  updated_at                               DateTime?   @db.Date
  name                                     String?
  member                                   member[]
  message                                  message[]
  subtask                                  subtask[]
  subtask_subtask_assigned_toTotaskhubuser subtask[]   @relation("subtask_assigned_toTotaskhubuser")
  tag                                      tag[]
  task                                     task[]
  workspace                                workspace[]
}

model workspace {
  id                 Int          @id @default(autoincrement())
  created_at         DateTime?    @db.Date
  updated_at         DateTime?    @db.Date
  title              String?      @db.VarChar(50)
  created_by_qs_user String?
  description        String?
  workspace_type     Int?         @default(3)
  category           category[]
  member             member[]
  task               task[]
  taskhubuser        taskhubuser? @relation(fields: [created_by_qs_user], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "created_by_qs_user_fk")
}

model action {
  id         Int       @id @default(autoincrement())
  task_id    Int?
  content    String
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  completed  Boolean?  @default(false)
  task       task?     @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model message {
  id          Int          @id @default(autoincrement())
  task_id     Int?
  content     String
  created_by  String?
  created_at  DateTime?    @db.Timestamp(6)
  updated_at  DateTime?    @db.Date
  taskhubuser taskhubuser? @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  task        task?        @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subtask {
  id                                           Int          @id @default(autoincrement())
  task_id                                      Int
  title                                        String
  in_progress                                  Boolean?     @default(false)
  due_date                                     DateTime     @db.Timestamp(6)
  created_at                                   DateTime?    @db.Date
  updated_at                                   DateTime?    @db.Timestamp(6)
  assigned_by                                  String
  priority                                     Int?         @default(0)
  assigned_to                                  String?
  taskhubuser                                  taskhubuser  @relation(fields: [assigned_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  taskhubuser_subtask_assigned_toTotaskhubuser taskhubuser? @relation("subtask_assigned_toTotaskhubuser", fields: [assigned_to], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  task                                         task         @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
